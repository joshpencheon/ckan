# When changing (note .env file too):
#
#   docker-compose build && docker-compose up -d
#
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
#
# ======= SETUP ========
#
# Once running, set up publish db:
#
#   docker exec -it datagovuk_publish bin/rails db:setup
#
# Set up elasticsearch indexes:
#
#   docker exec -it datagovuk_publish bin/rails search:reindex
#
# Set up CKAN admin account, to access an API token:
#
#   docker exec -it ckan /usr/lib/ckan/default/bin/paster --plugin=ckan sysadmin -c /etc/ckan/default/ckan.ini add firstname.lastname
#
# Populate CKAN as deemed appropriate.
#
#   ... e.g. internal tools `rake ckan:load:organisations`, `rake ckan:load:resources`, etc.
#
# Sync from CKAN into Postgres / elasticsearch:
#
#   docker exec -it datagovuk_publish bin/rails runner CKAN::V26::CKANOrgSyncWorker.new.perform
#   docker exec -it datagovuk_publish bin/rails runner CKAN::V26::PackageSyncWorker.new.perform
#   docker exec -it datagovuk_publish bundle exec sidekiq
#
# Access:
#
#    Find app      at http://localhost:3000
#    Publish app   at http://localhost:3001
#    ckan directly at http://localhost
#
version: "3"

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:
  solr_data:

services:
  gov_ckan:
    container_name: gov_ckan
    build:
      # context: ../../
      context: .
      args:
          - CKAN_SITE_URL=${CKAN_SITE_URL}
    links:
      - gov_db
      - gov_solr
      # - redis
    depends_on:
      - gov_db
    expose:
      - "80"
    ports:
      - "${CKAN_PORT}:80"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      # - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      # - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      # - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      # - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      # - CKAN_REDIS_URL=redis://redis:6379/1
      # - CKAN_DATAPUSHER_URL=http://datapusher:8800
      # - CKAN_SITE_URL=${CKAN_SITE_URL}
      # - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      #
      - SOLR_PORT_8983_TCP_ADDR=gov_solr
      - SOLR_PORT_8983_TCP_PORT=8983
      - DB_ENV_POSTGRES_USER=ckan
      - DB_ENV_POSTGRES_PASS=${POSTGRES_PASSWORD}
      - DB_ENV_POSTGRES_DB=ckan
      - DB_PORT_5432_TCP_ADDR=gov_db
      - DB_PORT_5432_TCP_PORT=5432
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}

    volumes:
      - ckan_config:/etc/ckan
      - ckan_home:/usr/lib/ckan
      - ckan_storage:/var/lib/ckan

  # datapusher:
  #   container_name: datapusher
  #   image: clementmouchet/datapusher
  #   ports:
  #     - "8800:8800"

  gov_db:
    container_name: gov_db
    build:
      # context: ../../
      context: .
      dockerfile: contrib/docker/postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  gov_solr:
    container_name: gov_solr
    build:
      # context: ../../
      context: .
      dockerfile: contrib/docker/solr/Dockerfile
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data

  gov_redis:
    container_name: gov_redis
    image: redis:latest

  datagovuk_find:
    container_name: datagovuk_find
    build: ./datagovuk_find
    command: bash -c "rm -f tmp/pids/server.pid && bin/rails s -p 3000 -b '0.0.0.0'"
    # volumes:
    #   - .:/datagovuk_find
    ports:
      - "3000:3000"
    links:
      - gov_elasticsearch
    environment:
      - ES_HOST=http://gov_elasticsearch:9200

  datagovuk_publish:
    container_name: datagovuk_publish
    build: ./datagovuk_publish
    # command: bash -c "bin/rails db:setup && rm -f tmp/pids/server.pid && bin/rails s -p 3000 -b '0.0.0.0'"
    command: bash -c "rm -f tmp/pids/server.pid && bin/rails s -p 3000 -b '0.0.0.0'"
    # volumes:
    #   - .:/datagovuk_publish
    ports:
      - "3001:3000"
    depends_on:
      - gov_db
    # links:
    #   - publish_db
    #   - publish_redis
    #   - publish_elasticsearch
    environment:
      - DATABASE_HOST=gov_db
      - DATABASE_USER=ckan
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - ES_HOST=http://gov_elasticsearch:9200

  gov_elasticsearch:
    container_name: gov_elasticsearch
    image: elasticsearch:6.8.3
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
